<!-- App.xaml - Updated with Company Color Palette -->
<Application x:Class="BusinessManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!-- Company Color Palette -->

        <!-- Primary Colors -->
        <SolidColorBrush x:Key="Svart" Color="#000000"/>
        <!-- Black -->
        <SolidColorBrush x:Key="Vit" Color="#FFFFFF"/>
        <!-- White -->
        <SolidColorBrush x:Key="Sten" Color="#E5E5E5"/>
        <!-- Light Gray -->
        <SolidColorBrush x:Key="Berg" Color="#A7A7A7"/>
        <!-- Medium Gray -->

        <!-- Accent Colors -->
        <SolidColorBrush x:Key="Dimma" Color="#9BBABB"/>
        <!-- Light Blue-Gray -->
        <SolidColorBrush x:Key="Djup" Color="#64878A"/>
        <!-- Dark Blue-Gray -->

        <!-- Semantic Color Assignments -->
        <SolidColorBrush x:Key="PrimaryBackground" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="SecondaryBackground" Color="#E5E5E5"/>
        <SolidColorBrush x:Key="SidebarBackground" Color="#64878A"/>
        <!-- Djup -->
        <SolidColorBrush x:Key="CardBackground" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="BorderColor" Color="#A7A7A7"/>
        <!-- Berg -->
        <SolidColorBrush x:Key="AccentColor" Color="#9BBABB"/>
        <!-- Dimma -->
        <SolidColorBrush x:Key="DarkAccentColor" Color="#64878A"/>
        <!-- Djup -->
        <SolidColorBrush x:Key="TextPrimary" Color="#000000"/>
        <!-- Svart -->
        <SolidColorBrush x:Key="TextSecondary" Color="#A7A7A7"/>
        <!-- Berg -->
        <SolidColorBrush x:Key="TextOnDark" Color="#FFFFFF"/>
        <!-- Vit -->

        <!-- Status Colors (using company palette) -->
        <SolidColorBrush x:Key="SuccessColor" Color="#64878A"/>
        <!-- Djup for success -->
        <SolidColorBrush x:Key="WarningColor" Color="#9BBABB"/>
        <!-- Dimma for warnings -->
        <SolidColorBrush x:Key="ErrorColor" Color="#000000"/>
        <!-- Svart for errors -->
        <SolidColorBrush x:Key="InfoColor" Color="#A7A7A7"/>
        <!-- Berg for info -->

        <!-- Navigation Button Styles -->
        <Style x:Key="NavigationButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource TextOnDark}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,10"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource DarkAccentColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Active Navigation Button Style -->
        <Style x:Key="ActiveNavigationButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationButtonStyle}">
            <Setter Property="Background" Value="{StaticResource AccentColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <!-- Primary Action Button Style -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource DarkAccentColor}"/>
            <Setter Property="Foreground" Value="{StaticResource TextOnDark}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource AccentColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Berg}"/>
                                <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource Berg}"/>
            <Setter Property="Foreground" Value="{StaticResource TextOnDark}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="{StaticResource Svart}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Opacity" Value="0.8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- DataGrid Styling with Company Colors -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource Sten}"/>
            <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
            <Setter Property="RowBackground" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="AlternatingRowBackground" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
        </Style>

        <!-- DataGrid Header Styling -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="0,0,1,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
        </Style>

        <!-- DataGrid Row Styling -->
        <Style TargetType="DataGridRow">
            <Setter Property="Padding" Value="0,4"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource AccentColor}"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource DarkAccentColor}"/>
                    <Setter Property="Foreground" Value="{StaticResource TextOnDark}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- DataGrid Cell Styling -->
        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="12,8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{StaticResource TextOnDark}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- TextBox Styling -->
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontSize" Value="13"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource DarkAccentColor}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBox Styling -->
        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="FontSize" Value="13"/>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource DarkAccentColor}"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource AccentColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="20"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="8" ShadowDepth="2" Opacity="0.1"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Header Text Style -->
        <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>

        <!-- Subheader Text Style -->
        <Style x:Key="SubheaderTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <!-- Body Text Style -->
        <Style x:Key="BodyTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimary}"/>
            <Setter Property="LineHeight" Value="20"/>
        </Style>

        <!-- Secondary Text Style -->
        <Style x:Key="SecondaryTextStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground" Value="{StaticResource TextSecondary}"/>
        </Style>

        <!-- ScrollViewer Styling -->
        <Style TargetType="ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        </Style>

        <!-- ScrollBar Styling -->
        <Style TargetType="ScrollBar">
            <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderColor}"/>
            <Setter Property="Foreground" Value="{StaticResource Berg}"/>
            <Setter Property="Width" Value="12"/>
        </Style>

    </Application.Resources>
</Application>